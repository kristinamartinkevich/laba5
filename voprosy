1. Что такое производный и базовый классы?
2. В чем заключена основная задача наследования?
3. Пусть базовый класс содержит метод basefunc(), а производный класс не имеет метода с таким именем. Может ли объект производного класса иметь доступ к методу basefunc()? Если да, то при каких условиях?
4. Напишите объявление конструктора без аргументов для производного класса B, который будет вызывать конструктор без аргументов базового класса A.
5. Что такое полиморфизм? Приведите пример.
6. Определите назначение виртуальных функций.
7. Кому доступны переменные с модификатором protected?
8. Наследуются ли переменные с модификатором private?
9. As, is – что это, как применяется?
10. Поддерживает ли C# множественное наследование?
11. Можно ли запретить наследование от класса?
12. Можно ли разрешить наследование класса, но запретить перекрытие
метода?
13. Что такое абстрактный класс?
14. В каком случае вы обязаны объявить класс абстрактным?
15. В чем разница между абстрактными и виртуальными классами? Между
виртуальными и абстрактными методами?
16. Какие компоненты класса могут быть виртуальными?
17. Что такое интерфейс?
18. Как работать с объектом через унаследованный интерфейс?
19. Приведите пример явной реализации интерфейса.
20. Почему нельзя указать модификатор видимости для методов интерфейса? 21. Можно ли наследовать от нескольких интерфейсов?
22. Назовите отличия между интерфейсом и абстрактным классом.
23. Для чего используются стандартные интерфейсы ICloneable, IComparable,
IComparer, lEnumerable?
24. В какой строке приведенного ниже фрагмента листинга не содержится
ошибки?
class A {
public virtual abstract void m() { } //1 public virtual void g() { }//2
public virtual new new void f() { }//3 public static virtual void h() { }//4
     }
   25.
 Что
будет
 выведено на консоль в результате выполнения следующего фрагмента?
      class A {
    public int x = 1;
}
class B : A {
    public new int x = 2;
    public void m(int a, int b)
    {
x = a;
base.x = b;
Console.Write(x + " " + base.x);
} }
class Test {
    static void Main(string[] args)
    {
                                    A a = new A();
B b = new B();
b.m(3, 4);
        } }
       26.
Что будет выведено на консоль в результате выполнения следующего фрагмента
кода?
     class A {
    public class B : A
    {
        public override void mA()
        {
            Console.WriteLine("B ");
        }
}
public virtual void mA()
          {
              Console.WriteLine("A ");
} }
class Prоgrаm
{
    static void Main(string[] args)
    {
        A a = new A();
        A.B b = new A.B();
        a.mA();
        b.mA();
} }
                                                    
                                                        27.
 Чем может быть M4 если дано следующее определение:
 Варианты ответа:
1) 2) 3) 4) 5)
1) 2) 3) 4) 5)
 M4 - только интерфейс
      public class C1 : M1, M2 { } public struct S1 : M3, M4 { };
 M4 - интерфейс или класс
   M4 - только класс
    M4 - только структура
 M4 - делегат
28.
 Выберите верное присваивание для объектов, определенных в листинге.
     class A { }
        class B : A { }
        class C : B { }
        class D { }
        class Test
        {
            static void Main(string[] args)
            {
                A a = new A();
                B b = new B();
                C c = new C();
                D d = new D();
} }
                                29.
Что будет выведено на консоль в результате выполнения следующего фрагмента,
public abstract class A
        {
если раскомментировать строчку 1?
    public virtual void method()
    { Console.Write("A "); }
}
public class B : A
{
Варианты ответа:
    public override void method()
    {  // base.method(); // 1
        // this.method();  // 2
        Console.Write("B ");
    }
}
1) B
2) A
3) 4)
5) 0
Варианты ответа:
 b = a; a = b;
 c = a;
 d = a; с = b;
   AB BA
 class Program2
{
    static void Main(string[] args)
{
    A my = new B();
    my.method();
} }
 
 30. В какой строке приведенного ниже фрагмента листинга содержится ошибка?
     public abstract class A
{
public virtual string m() { return "A"; }//1 }
public class B : A
{
    public override new string m() { return "B"; }//2
}
public class C : B
{
    public string m() { return "C"; }//3
}
class Prоgrаm
{
    static void Main(string[] args)
    {
        A ac = new C(); //4
        Console.WriteLine(ac.m());
} }
                                            31. Почему приведенный ниже фрагмент листинга содержит ошибку?
     abstract class Student //1
        {
            public int Age { get; set; } //2
public string Name { get; set; } //3 }
        static void Main(string[] args)
        {
            Student Olga = new Student();//4
        }
                        32. В какой строке может быть ошибка компиляции?
     class A{}
        class B : A { }
        class C : A { } //1
        class Program4
        {
            static void Main()
            {
} }
A one = new B(); //2 A two = new C(); //3 one = two; //4
  
 33. Что будет выведено на консоль в результате выполнения следующего фрагмента листинга:
interface Interface1
        {
void f();
void g(); }
class A {
public void f() { System.Console.WriteLine("F"); }
public void g() { System.Console.WriteLine("G"); } }
        class B : A, Interface1
        {
new public void g() { System.Console.WriteLine("new G");
}
}
        class Program5
        {
            static void Main(string[] args)
            {
} }
//Interface1 obj = new B();
//obj.g();
B obj = new B();
obj.g();
.
